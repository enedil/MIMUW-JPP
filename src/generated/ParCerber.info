-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParCerber.y
-----------------------------------------------------------------------------

state 55 contains 1 shift/reduce conflicts.
state 126 contains 1 shift/reduce conflicts.
state 150 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg1 -> Type Ident                                 (8)
	Arg1 -> Arg2                                       (9)
	Arg2 -> Type 'ref' Ident                           (10)
	Arg2 -> '(' Arg ')'                                (11)
	Arg -> Arg1                                        (12)
	ListArg ->                                         (13)
	ListArg -> Arg                                     (14)
	ListArg -> Arg ',' ListArg                         (15)
	Block -> '{' ListStmt '}'                          (16)
	ListStmt ->                                        (17)
	ListStmt -> Stmt ListStmt                          (18)
	Stmt -> ';'                                        (19)
	Stmt -> Block                                      (20)
	Stmt -> Type ListItem ';'                          (21)
	Stmt -> Ident '=' Expr ';'                         (22)
	Stmt -> Expr7 ':=' Expr ';'                        (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'return' ';'                               (25)
	Stmt -> 'yield' Expr ';'                           (26)
	Stmt -> 'if' '(' Expr ')' Stmt                     (27)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (28)
	Stmt -> Expr ';'                                   (29)
	Stmt -> 'break' ';'                                (30)
	Stmt -> 'continue' ';'                             (31)
	Stmt -> 'while' '(' Expr ')' Stmt                  (32)
	Stmt -> 'for' Ident 'in' Expr Stmt                 (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Type -> 'int'                                      (38)
	Type -> 'string'                                   (39)
	Type -> 'boolean'                                  (40)
	Type -> 'void'                                     (41)
	Type -> 'generator' '<' Type '>'                   (42)
	Type -> 'tuple' '<' ListType '>'                   (43)
	Type -> 'function' '<' ListType '>'                (44)
	ListType ->                                        (45)
	ListType -> Type                                   (46)
	ListType -> Type ',' ListType                      (47)
	Expr6 -> Ident                                     (48)
	Expr6 -> Integer                                   (49)
	Expr6 -> 'true'                                    (50)
	Expr6 -> 'false'                                   (51)
	Expr6 -> Expr6 '[~' ListExpr ']~'                  (52)
	Expr6 -> String                                    (53)
	Expr6 -> '[' ListArg ']' ':' Type '~>' Block       (54)
	Expr6 -> Expr7                                     (55)
	Expr5 -> '-' Expr6                                 (56)
	Expr5 -> '!' Expr6                                 (57)
	Expr5 -> Expr6                                     (58)
	Expr4 -> Expr4 MulOp Expr5                         (59)
	Expr4 -> Expr5                                     (60)
	Expr3 -> Expr3 AddOp Expr4                         (61)
	Expr3 -> Expr4                                     (62)
	Expr2 -> Expr2 RelOp Expr3                         (63)
	Expr2 -> Expr3                                     (64)
	Expr1 -> Expr2 '&&' Expr1                          (65)
	Expr1 -> Expr2                                     (66)
	Expr -> Expr1 '||' Expr                            (67)
	Expr -> Expr1                                      (68)
	Expr7 -> '~[' ListExpr '~]'                        (69)
	Expr7 -> '(' Expr ')'                              (70)
	ListExpr ->                                        (71)
	ListExpr -> Expr                                   (72)
	ListExpr -> Expr ',' ListExpr                      (73)
	AddOp -> '+'                                       (74)
	AddOp -> '-'                                       (75)
	MulOp -> '*'                                       (76)
	MulOp -> '/'                                       (77)
	MulOp -> '%'                                       (78)
	RelOp -> '<'                                       (79)
	RelOp -> '<='                                      (80)
	RelOp -> '>'                                       (81)
	RelOp -> '>='                                      (82)
	RelOp -> '=='                                      (83)
	RelOp -> '!='                                      (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	':'            { PT _ (TS _ 12) }
	':='           { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'['            { PT _ (TS _ 21) }
	'[~'           { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	']~'           { PT _ (TS _ 24) }
	'boolean'      { PT _ (TS _ 25) }
	'break'        { PT _ (TS _ 26) }
	'continue'     { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'false'        { PT _ (TS _ 29) }
	'for'          { PT _ (TS _ 30) }
	'function'     { PT _ (TS _ 31) }
	'generator'    { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'in'           { PT _ (TS _ 34) }
	'int'          { PT _ (TS _ 35) }
	'ref'          { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'string'       { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'tuple'        { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'yield'        { PT _ (TS _ 43) }
	'{'            { PT _ (TS _ 44) }
	'||'           { PT _ (TS _ 45) }
	'}'            { PT _ (TS _ 46) }
	'~>'           { PT _ (TS _ 47) }
	'~['           { PT _ (TS _ 48) }
	'~]'           { PT _ (TS _ 49) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg1            rules 8, 9
	Arg2            rules 10, 11
	Arg             rule  12
	ListArg         rules 13, 14, 15
	Block           rule  16
	ListStmt        rules 17, 18
	Stmt            rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	Type            rules 38, 39, 40, 41, 42, 43, 44
	ListType        rules 45, 46, 47
	Expr6           rules 48, 49, 50, 51, 52, 53, 54, 55
	Expr5           rules 56, 57, 58
	Expr4           rules 59, 60
	Expr3           rules 61, 62
	Expr2           rules 63, 64
	Expr1           rules 65, 66
	Expr            rules 67, 68
	Expr7           rules 69, 70
	ListExpr        rules 71, 72, 73
	AddOp           rules 74, 75
	MulOp           rules 76, 77, 78
	RelOp           rules 79, 80, 81, 82, 83, 84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[~'           reduce using rule 1
	']'            reduce using rule 1
	']~'           reduce using rule 1
	'boolean'      reduce using rule 1
	'break'        reduce using rule 1
	'continue'     reduce using rule 1
	'false'        reduce using rule 1
	'for'          reduce using rule 1
	'function'     reduce using rule 1
	'generator'    reduce using rule 1
	'if'           reduce using rule 1
	'in'           reduce using rule 1
	'int'          reduce using rule 1
	'return'       reduce using rule 1
	'string'       reduce using rule 1
	'true'         reduce using rule 1
	'tuple'        reduce using rule 1
	'void'         reduce using rule 1
	'while'        reduce using rule 1
	'yield'        reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'~['           reduce using rule 1
	'~]'           reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_quoted       reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 18
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 7

	Type -> 'boolean' .                                 (rule 40)

	','            reduce using rule 40
	'>'            reduce using rule 40
	'ref'          reduce using rule 40
	'~>'           reduce using rule 40
	L_Ident        reduce using rule 40


State 8

	Type -> 'function' . '<' ListType '>'               (rule 44)

	'<'            shift, and enter state 16


State 9

	Type -> 'generator' . '<' Type '>'                  (rule 42)

	'<'            shift, and enter state 15


State 10

	Type -> 'int' .                                     (rule 38)

	','            reduce using rule 38
	'>'            reduce using rule 38
	'ref'          reduce using rule 38
	'~>'           reduce using rule 38
	L_Ident        reduce using rule 38


State 11

	Type -> 'string' .                                  (rule 39)

	','            reduce using rule 39
	'>'            reduce using rule 39
	'ref'          reduce using rule 39
	'~>'           reduce using rule 39
	L_Ident        reduce using rule 39


State 12

	Type -> 'tuple' . '<' ListType '>'                  (rule 43)

	'<'            shift, and enter state 14


State 13

	Type -> 'void' .                                    (rule 41)

	','            reduce using rule 41
	'>'            reduce using rule 41
	'ref'          reduce using rule 41
	'~>'           reduce using rule 41
	L_Ident        reduce using rule 41


State 14

	Type -> 'tuple' '<' . ListType '>'                  (rule 43)

	'>'            reduce using rule 45
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 20
	ListType       goto state 23

State 15

	Type -> 'generator' '<' . Type '>'                  (rule 42)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 22

State 16

	Type -> 'function' '<' . ListType '>'               (rule 44)

	'>'            reduce using rule 45
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 20
	ListType       goto state 21

State 17

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 19


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 19

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	'('            shift, and enter state 33
	')'            reduce using rule 13
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Arg1           goto state 28
	Arg2           goto state 29
	Arg            goto state 30
	ListArg        goto state 31
	Type           goto state 32

State 20

	ListType -> Type .                                  (rule 46)
	ListType -> Type . ',' ListType                     (rule 47)

	','            shift, and enter state 27
	'>'            reduce using rule 46


State 21

	Type -> 'function' '<' ListType . '>'               (rule 44)

	'>'            shift, and enter state 26


State 22

	Type -> 'generator' '<' Type . '>'                  (rule 42)

	'>'            shift, and enter state 25


State 23

	Type -> 'tuple' '<' ListType . '>'                  (rule 43)

	'>'            shift, and enter state 24


State 24

	Type -> 'tuple' '<' ListType '>' .                  (rule 43)

	','            reduce using rule 43
	'>'            reduce using rule 43
	'ref'          reduce using rule 43
	'~>'           reduce using rule 43
	L_Ident        reduce using rule 43


State 25

	Type -> 'generator' '<' Type '>' .                  (rule 42)

	','            reduce using rule 42
	'>'            reduce using rule 42
	'ref'          reduce using rule 42
	'~>'           reduce using rule 42
	L_Ident        reduce using rule 42


State 26

	Type -> 'function' '<' ListType '>' .               (rule 44)

	','            reduce using rule 44
	'>'            reduce using rule 44
	'ref'          reduce using rule 44
	'~>'           reduce using rule 44
	L_Ident        reduce using rule 44


State 27

	ListType -> Type ',' . ListType                     (rule 47)

	'>'            reduce using rule 45
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 20
	ListType       goto state 39

State 28

	Arg -> Arg1 .                                       (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12
	']'            reduce using rule 12


State 29

	Arg1 -> Arg2 .                                      (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9
	']'            reduce using rule 9


State 30

	ListArg -> Arg .                                    (rule 14)
	ListArg -> Arg . ',' ListArg                        (rule 15)

	')'            reduce using rule 14
	','            shift, and enter state 38
	']'            reduce using rule 14


State 31

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 37


State 32

	Arg1 -> Type . Ident                                (rule 8)
	Arg2 -> Type . 'ref' Ident                          (rule 10)

	'ref'          shift, and enter state 36
	L_Ident        shift, and enter state 2

	Ident          goto state 35

State 33

	Arg2 -> '(' . Arg ')'                               (rule 11)

	'('            shift, and enter state 33
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Arg1           goto state 28
	Arg2           goto state 29
	Arg            goto state 34
	Type           goto state 32

State 34

	Arg2 -> '(' Arg . ')'                               (rule 11)

	')'            shift, and enter state 44


State 35

	Arg1 -> Type Ident .                                (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8
	']'            reduce using rule 8


State 36

	Arg2 -> Type 'ref' . Ident                          (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 43

State 37

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 42

	Block          goto state 41

State 38

	ListArg -> Arg ',' . ListArg                        (rule 15)

	'('            shift, and enter state 33
	')'            reduce using rule 13
	']'            reduce using rule 13
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Arg1           goto state 28
	Arg2           goto state 29
	Arg            goto state 30
	ListArg        goto state 40
	Type           goto state 32

State 39

	ListType -> Type ',' ListType .                     (rule 47)

	'>'            reduce using rule 47


State 40

	ListArg -> Arg ',' ListArg .                        (rule 15)

	')'            reduce using rule 15
	']'            reduce using rule 15


State 41

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'function'     reduce using rule 5
	'generator'    reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'tuple'        reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 42

	Block -> '{' . ListStmt '}'                         (rule 16)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'['            shift, and enter state 64
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 65
	'continue'     shift, and enter state 66
	'false'        shift, and enter state 67
	'for'          shift, and enter state 68
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'if'           shift, and enter state 69
	'int'          shift, and enter state 10
	'return'       shift, and enter state 70
	'string'       shift, and enter state 11
	'true'         shift, and enter state 71
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	'while'        shift, and enter state 72
	'yield'        shift, and enter state 73
	'{'            shift, and enter state 42
	'}'            reduce using rule 17
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	ListStmt       goto state 49
	Stmt           goto state 50
	Type           goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr7          goto state 59

State 43

	Arg2 -> Type 'ref' Ident .                          (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10
	']'            reduce using rule 10


State 44

	Arg2 -> '(' Arg ')' .                               (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11
	']'            reduce using rule 11


State 45

	Stmt -> Ident . '=' Expr ';'                        (rule 22)
	Expr6 -> Ident .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            shift, and enter state 117
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'[~'           reduce using rule 48
	'||'           reduce using rule 48


State 46

	Expr6 -> Integer .                                  (rule 49)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	'[~'           reduce using rule 49
	']~'           reduce using rule 49
	'boolean'      reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'false'        reduce using rule 49
	'for'          reduce using rule 49
	'function'     reduce using rule 49
	'generator'    reduce using rule 49
	'if'           reduce using rule 49
	'int'          reduce using rule 49
	'return'       reduce using rule 49
	'string'       reduce using rule 49
	'true'         reduce using rule 49
	'tuple'        reduce using rule 49
	'void'         reduce using rule 49
	'while'        reduce using rule 49
	'yield'        reduce using rule 49
	'{'            reduce using rule 49
	'||'           reduce using rule 49
	'~['           reduce using rule 49
	'~]'           reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 47

	Expr6 -> String .                                   (rule 53)

	'!'            reduce using rule 53
	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	'[~'           reduce using rule 53
	']~'           reduce using rule 53
	'boolean'      reduce using rule 53
	'break'        reduce using rule 53
	'continue'     reduce using rule 53
	'false'        reduce using rule 53
	'for'          reduce using rule 53
	'function'     reduce using rule 53
	'generator'    reduce using rule 53
	'if'           reduce using rule 53
	'int'          reduce using rule 53
	'return'       reduce using rule 53
	'string'       reduce using rule 53
	'true'         reduce using rule 53
	'tuple'        reduce using rule 53
	'void'         reduce using rule 53
	'while'        reduce using rule 53
	'yield'        reduce using rule 53
	'{'            reduce using rule 53
	'||'           reduce using rule 53
	'~['           reduce using rule 53
	'~]'           reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 48

	Stmt -> Block .                                     (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'['            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'function'     reduce using rule 20
	'generator'    reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'tuple'        reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'yield'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'~['           reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 49

	Block -> '{' ListStmt . '}'                         (rule 16)

	'}'            shift, and enter state 116


State 50

	ListStmt -> Stmt . ListStmt                         (rule 18)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'['            shift, and enter state 64
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 65
	'continue'     shift, and enter state 66
	'false'        shift, and enter state 67
	'for'          shift, and enter state 68
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'if'           shift, and enter state 69
	'int'          shift, and enter state 10
	'return'       shift, and enter state 70
	'string'       shift, and enter state 11
	'true'         shift, and enter state 71
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	'while'        shift, and enter state 72
	'yield'        shift, and enter state 73
	'{'            shift, and enter state 42
	'}'            reduce using rule 17
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	ListStmt       goto state 115
	Stmt           goto state 50
	Type           goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr7          goto state 59

State 51

	Stmt -> Type . ListItem ';'                         (rule 21)

	L_Ident        shift, and enter state 2

	Ident          goto state 112
	Item           goto state 113
	ListItem       goto state 114

State 52

	Expr6 -> Expr6 . '[~' ListExpr ']~'                 (rule 52)
	Expr5 -> Expr6 .                                    (rule 58)

	'!'            reduce using rule 58
	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	'[~'           shift, and enter state 111
	']~'           reduce using rule 58
	'boolean'      reduce using rule 58
	'break'        reduce using rule 58
	'continue'     reduce using rule 58
	'false'        reduce using rule 58
	'for'          reduce using rule 58
	'function'     reduce using rule 58
	'generator'    reduce using rule 58
	'if'           reduce using rule 58
	'int'          reduce using rule 58
	'return'       reduce using rule 58
	'string'       reduce using rule 58
	'true'         reduce using rule 58
	'tuple'        reduce using rule 58
	'void'         reduce using rule 58
	'while'        reduce using rule 58
	'yield'        reduce using rule 58
	'{'            reduce using rule 58
	'||'           reduce using rule 58
	'~['           reduce using rule 58
	'~]'           reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 53

	Expr4 -> Expr5 .                                    (rule 60)

	'!'            reduce using rule 60
	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']~'           reduce using rule 60
	'boolean'      reduce using rule 60
	'break'        reduce using rule 60
	'continue'     reduce using rule 60
	'false'        reduce using rule 60
	'for'          reduce using rule 60
	'function'     reduce using rule 60
	'generator'    reduce using rule 60
	'if'           reduce using rule 60
	'int'          reduce using rule 60
	'return'       reduce using rule 60
	'string'       reduce using rule 60
	'true'         reduce using rule 60
	'tuple'        reduce using rule 60
	'void'         reduce using rule 60
	'while'        reduce using rule 60
	'yield'        reduce using rule 60
	'{'            reduce using rule 60
	'||'           reduce using rule 60
	'~['           reduce using rule 60
	'~]'           reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 54

	Expr4 -> Expr4 . MulOp Expr5                        (rule 59)
	Expr3 -> Expr4 .                                    (rule 62)

	'!'            reduce using rule 62
	'!='           reduce using rule 62
	'%'            shift, and enter state 108
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 109
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            shift, and enter state 110
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']~'           reduce using rule 62
	'boolean'      reduce using rule 62
	'break'        reduce using rule 62
	'continue'     reduce using rule 62
	'false'        reduce using rule 62
	'for'          reduce using rule 62
	'function'     reduce using rule 62
	'generator'    reduce using rule 62
	'if'           reduce using rule 62
	'int'          reduce using rule 62
	'return'       reduce using rule 62
	'string'       reduce using rule 62
	'true'         reduce using rule 62
	'tuple'        reduce using rule 62
	'void'         reduce using rule 62
	'while'        reduce using rule 62
	'yield'        reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62
	'~['           reduce using rule 62
	'~]'           reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62

	MulOp          goto state 107

State 55

	Expr3 -> Expr3 . AddOp Expr4                        (rule 61)
	Expr2 -> Expr3 .                                    (rule 64)

	'!'            reduce using rule 64
	'!='           reduce using rule 64
	'&&'           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'+'            shift, and enter state 105
	','            reduce using rule 64
	'-'            shift, and enter state 106
			(reduce using rule 64)

	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            reduce using rule 64
	']~'           reduce using rule 64
	'boolean'      reduce using rule 64
	'break'        reduce using rule 64
	'continue'     reduce using rule 64
	'false'        reduce using rule 64
	'for'          reduce using rule 64
	'function'     reduce using rule 64
	'generator'    reduce using rule 64
	'if'           reduce using rule 64
	'int'          reduce using rule 64
	'return'       reduce using rule 64
	'string'       reduce using rule 64
	'true'         reduce using rule 64
	'tuple'        reduce using rule 64
	'void'         reduce using rule 64
	'while'        reduce using rule 64
	'yield'        reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64
	'~['           reduce using rule 64
	'~]'           reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64

	AddOp          goto state 104

State 56

	Expr2 -> Expr2 . RelOp Expr3                        (rule 63)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 65)
	Expr1 -> Expr2 .                                    (rule 66)

	'!'            reduce using rule 66
	'!='           shift, and enter state 97
	'&&'           shift, and enter state 98
	'('            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	';'            reduce using rule 66
	'<'            shift, and enter state 99
	'<='           shift, and enter state 100
	'=='           shift, and enter state 101
	'>'            shift, and enter state 102
	'>='           shift, and enter state 103
	'['            reduce using rule 66
	']~'           reduce using rule 66
	'boolean'      reduce using rule 66
	'break'        reduce using rule 66
	'continue'     reduce using rule 66
	'false'        reduce using rule 66
	'for'          reduce using rule 66
	'function'     reduce using rule 66
	'generator'    reduce using rule 66
	'if'           reduce using rule 66
	'int'          reduce using rule 66
	'return'       reduce using rule 66
	'string'       reduce using rule 66
	'true'         reduce using rule 66
	'tuple'        reduce using rule 66
	'void'         reduce using rule 66
	'while'        reduce using rule 66
	'yield'        reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66
	'~['           reduce using rule 66
	'~]'           reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66

	RelOp          goto state 96

State 57

	Expr -> Expr1 . '||' Expr                           (rule 67)
	Expr -> Expr1 .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	';'            reduce using rule 68
	'['            reduce using rule 68
	']~'           reduce using rule 68
	'boolean'      reduce using rule 68
	'break'        reduce using rule 68
	'continue'     reduce using rule 68
	'false'        reduce using rule 68
	'for'          reduce using rule 68
	'function'     reduce using rule 68
	'generator'    reduce using rule 68
	'if'           reduce using rule 68
	'int'          reduce using rule 68
	'return'       reduce using rule 68
	'string'       reduce using rule 68
	'true'         reduce using rule 68
	'tuple'        reduce using rule 68
	'void'         reduce using rule 68
	'while'        reduce using rule 68
	'yield'        reduce using rule 68
	'{'            reduce using rule 68
	'||'           shift, and enter state 95
	'~['           reduce using rule 68
	'~]'           reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 58

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 94


State 59

	Stmt -> Expr7 . ':=' Expr ';'                       (rule 23)
	Expr6 -> Expr7 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	':='           shift, and enter state 93
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'[~'           reduce using rule 55
	'||'           reduce using rule 55


State 60

	Expr5 -> '!' . Expr6                                (rule 57)

	'('            shift, and enter state 61
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 92
	Expr7          goto state 79

State 61

	Expr7 -> '(' . Expr ')'                             (rule 70)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 91
	Expr7          goto state 79

State 62

	Expr5 -> '-' . Expr6                                (rule 56)

	'('            shift, and enter state 61
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 90
	Expr7          goto state 79

State 63

	Stmt -> ';' .                                       (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'['            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'function'     reduce using rule 19
	'generator'    reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'tuple'        reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'yield'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'~['           reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 64

	Expr6 -> '[' . ListArg ']' ':' Type '~>' Block      (rule 54)

	'('            shift, and enter state 33
	']'            reduce using rule 13
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Arg1           goto state 28
	Arg2           goto state 29
	Arg            goto state 30
	ListArg        goto state 89
	Type           goto state 32

State 65

	Stmt -> 'break' . ';'                               (rule 30)

	';'            shift, and enter state 88


State 66

	Stmt -> 'continue' . ';'                            (rule 31)

	';'            shift, and enter state 87


State 67

	Expr6 -> 'false' .                                  (rule 51)

	'!'            reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	'[~'           reduce using rule 51
	']~'           reduce using rule 51
	'boolean'      reduce using rule 51
	'break'        reduce using rule 51
	'continue'     reduce using rule 51
	'false'        reduce using rule 51
	'for'          reduce using rule 51
	'function'     reduce using rule 51
	'generator'    reduce using rule 51
	'if'           reduce using rule 51
	'int'          reduce using rule 51
	'return'       reduce using rule 51
	'string'       reduce using rule 51
	'true'         reduce using rule 51
	'tuple'        reduce using rule 51
	'void'         reduce using rule 51
	'while'        reduce using rule 51
	'yield'        reduce using rule 51
	'{'            reduce using rule 51
	'||'           reduce using rule 51
	'~['           reduce using rule 51
	'~]'           reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 68

	Stmt -> 'for' . Ident 'in' Expr Stmt                (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 86

State 69

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 27)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 28)

	'('            shift, and enter state 85


State 70

	Stmt -> 'return' . Expr ';'                         (rule 24)
	Stmt -> 'return' . ';'                              (rule 25)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 84
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 83
	Expr7          goto state 79

State 71

	Expr6 -> 'true' .                                   (rule 50)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	'[~'           reduce using rule 50
	']~'           reduce using rule 50
	'boolean'      reduce using rule 50
	'break'        reduce using rule 50
	'continue'     reduce using rule 50
	'false'        reduce using rule 50
	'for'          reduce using rule 50
	'function'     reduce using rule 50
	'generator'    reduce using rule 50
	'if'           reduce using rule 50
	'int'          reduce using rule 50
	'return'       reduce using rule 50
	'string'       reduce using rule 50
	'true'         reduce using rule 50
	'tuple'        reduce using rule 50
	'void'         reduce using rule 50
	'while'        reduce using rule 50
	'yield'        reduce using rule 50
	'{'            reduce using rule 50
	'||'           reduce using rule 50
	'~['           reduce using rule 50
	'~]'           reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 72

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 32)

	'('            shift, and enter state 82


State 73

	Stmt -> 'yield' . Expr ';'                          (rule 26)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 81
	Expr7          goto state 79

State 74

	Expr7 -> '~[' . ListExpr '~]'                       (rule 69)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	'~]'           reduce using rule 71
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 78
	Expr7          goto state 79
	ListExpr       goto state 80

State 75

	Integer -> L_integ .                                (rule 2)

	'!'            reduce using rule 2
	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	'[~'           reduce using rule 2
	']~'           reduce using rule 2
	'boolean'      reduce using rule 2
	'break'        reduce using rule 2
	'continue'     reduce using rule 2
	'false'        reduce using rule 2
	'for'          reduce using rule 2
	'function'     reduce using rule 2
	'generator'    reduce using rule 2
	'if'           reduce using rule 2
	'int'          reduce using rule 2
	'return'       reduce using rule 2
	'string'       reduce using rule 2
	'true'         reduce using rule 2
	'tuple'        reduce using rule 2
	'void'         reduce using rule 2
	'while'        reduce using rule 2
	'yield'        reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'~['           reduce using rule 2
	'~]'           reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_quoted       reduce using rule 2


State 76

	String -> L_quoted .                                (rule 3)

	'!'            reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	'[~'           reduce using rule 3
	']~'           reduce using rule 3
	'boolean'      reduce using rule 3
	'break'        reduce using rule 3
	'continue'     reduce using rule 3
	'false'        reduce using rule 3
	'for'          reduce using rule 3
	'function'     reduce using rule 3
	'generator'    reduce using rule 3
	'if'           reduce using rule 3
	'int'          reduce using rule 3
	'return'       reduce using rule 3
	'string'       reduce using rule 3
	'true'         reduce using rule 3
	'tuple'        reduce using rule 3
	'void'         reduce using rule 3
	'while'        reduce using rule 3
	'yield'        reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'~['           reduce using rule 3
	'~]'           reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_quoted       reduce using rule 3


State 77

	Expr6 -> Ident .                                    (rule 48)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'[~'           reduce using rule 48
	']~'           reduce using rule 48
	'boolean'      reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'function'     reduce using rule 48
	'generator'    reduce using rule 48
	'if'           reduce using rule 48
	'int'          reduce using rule 48
	'return'       reduce using rule 48
	'string'       reduce using rule 48
	'true'         reduce using rule 48
	'tuple'        reduce using rule 48
	'void'         reduce using rule 48
	'while'        reduce using rule 48
	'yield'        reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'~['           reduce using rule 48
	'~]'           reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 78

	ListExpr -> Expr .                                  (rule 72)
	ListExpr -> Expr . ',' ListExpr                     (rule 73)

	','            shift, and enter state 137
	']~'           reduce using rule 72
	'~]'           reduce using rule 72


State 79

	Expr6 -> Expr7 .                                    (rule 55)

	'!'            reduce using rule 55
	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	'[~'           reduce using rule 55
	']~'           reduce using rule 55
	'boolean'      reduce using rule 55
	'break'        reduce using rule 55
	'continue'     reduce using rule 55
	'false'        reduce using rule 55
	'for'          reduce using rule 55
	'function'     reduce using rule 55
	'generator'    reduce using rule 55
	'if'           reduce using rule 55
	'int'          reduce using rule 55
	'return'       reduce using rule 55
	'string'       reduce using rule 55
	'true'         reduce using rule 55
	'tuple'        reduce using rule 55
	'void'         reduce using rule 55
	'while'        reduce using rule 55
	'yield'        reduce using rule 55
	'{'            reduce using rule 55
	'||'           reduce using rule 55
	'~['           reduce using rule 55
	'~]'           reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 80

	Expr7 -> '~[' ListExpr . '~]'                       (rule 69)

	'~]'           shift, and enter state 136


State 81

	Stmt -> 'yield' Expr . ';'                          (rule 26)

	';'            shift, and enter state 135


State 82

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 134
	Expr7          goto state 79

State 83

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 133


State 84

	Stmt -> 'return' ';' .                              (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'['            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'function'     reduce using rule 25
	'generator'    reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'tuple'        reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'yield'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~['           reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 85

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 27)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 28)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 132
	Expr7          goto state 79

State 86

	Stmt -> 'for' Ident . 'in' Expr Stmt                (rule 33)

	'in'           shift, and enter state 131


State 87

	Stmt -> 'continue' ';' .                            (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'['            reduce using rule 31
	'boolean'      reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'function'     reduce using rule 31
	'generator'    reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'tuple'        reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'yield'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'~['           reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 88

	Stmt -> 'break' ';' .                               (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'['            reduce using rule 30
	'boolean'      reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'function'     reduce using rule 30
	'generator'    reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'tuple'        reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'yield'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'~['           reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 89

	Expr6 -> '[' ListArg . ']' ':' Type '~>' Block      (rule 54)

	']'            shift, and enter state 130


State 90

	Expr6 -> Expr6 . '[~' ListExpr ']~'                 (rule 52)
	Expr5 -> '-' Expr6 .                                (rule 56)

	'!'            reduce using rule 56
	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	'[~'           shift, and enter state 111
	']~'           reduce using rule 56
	'boolean'      reduce using rule 56
	'break'        reduce using rule 56
	'continue'     reduce using rule 56
	'false'        reduce using rule 56
	'for'          reduce using rule 56
	'function'     reduce using rule 56
	'generator'    reduce using rule 56
	'if'           reduce using rule 56
	'int'          reduce using rule 56
	'return'       reduce using rule 56
	'string'       reduce using rule 56
	'true'         reduce using rule 56
	'tuple'        reduce using rule 56
	'void'         reduce using rule 56
	'while'        reduce using rule 56
	'yield'        reduce using rule 56
	'{'            reduce using rule 56
	'||'           reduce using rule 56
	'~['           reduce using rule 56
	'~]'           reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 91

	Expr7 -> '(' Expr . ')'                             (rule 70)

	')'            shift, and enter state 129


State 92

	Expr6 -> Expr6 . '[~' ListExpr ']~'                 (rule 52)
	Expr5 -> '!' Expr6 .                                (rule 57)

	'!'            reduce using rule 57
	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	'[~'           shift, and enter state 111
	']~'           reduce using rule 57
	'boolean'      reduce using rule 57
	'break'        reduce using rule 57
	'continue'     reduce using rule 57
	'false'        reduce using rule 57
	'for'          reduce using rule 57
	'function'     reduce using rule 57
	'generator'    reduce using rule 57
	'if'           reduce using rule 57
	'int'          reduce using rule 57
	'return'       reduce using rule 57
	'string'       reduce using rule 57
	'true'         reduce using rule 57
	'tuple'        reduce using rule 57
	'void'         reduce using rule 57
	'while'        reduce using rule 57
	'yield'        reduce using rule 57
	'{'            reduce using rule 57
	'||'           reduce using rule 57
	'~['           reduce using rule 57
	'~]'           reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 93

	Stmt -> Expr7 ':=' . Expr ';'                       (rule 23)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 128
	Expr7          goto state 79

State 94

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'['            reduce using rule 29
	'boolean'      reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'function'     reduce using rule 29
	'generator'    reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'tuple'        reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'yield'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'~['           reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 95

	Expr -> Expr1 '||' . Expr                           (rule 67)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 127
	Expr7          goto state 79

State 96

	Expr2 -> Expr2 RelOp . Expr3                        (rule 63)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 126
	Expr7          goto state 79

State 97

	RelOp -> '!=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'['            reduce using rule 84
	'false'        reduce using rule 84
	'true'         reduce using rule 84
	'~['           reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 98

	Expr1 -> Expr2 '&&' . Expr1                         (rule 65)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 125
	Expr7          goto state 79

State 99

	RelOp -> '<' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'['            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	'~['           reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 100

	RelOp -> '<=' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'['            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	'~['           reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 101

	RelOp -> '==' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'['            reduce using rule 83
	'false'        reduce using rule 83
	'true'         reduce using rule 83
	'~['           reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 102

	RelOp -> '>' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'['            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	'~['           reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 103

	RelOp -> '>=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'['            reduce using rule 82
	'false'        reduce using rule 82
	'true'         reduce using rule 82
	'~['           reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 104

	Expr3 -> Expr3 AddOp . Expr4                        (rule 61)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 124
	Expr7          goto state 79

State 105

	AddOp -> '+' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'['            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	'~['           reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 106

	AddOp -> '-' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'['            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	'~['           reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 107

	Expr4 -> Expr4 MulOp . Expr5                        (rule 59)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 123
	Expr7          goto state 79

State 108

	MulOp -> '%' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'['            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	'~['           reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 109

	MulOp -> '*' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'['            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	'~['           reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 110

	MulOp -> '/' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'['            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	'~['           reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 111

	Expr6 -> Expr6 '[~' . ListExpr ']~'                 (rule 52)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	']~'           reduce using rule 71
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 78
	Expr7          goto state 79
	ListExpr       goto state 122

State 112

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 121


State 113

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 120
	';'            reduce using rule 36


State 114

	Stmt -> Type ListItem . ';'                         (rule 21)

	';'            shift, and enter state 119


State 115

	ListStmt -> Stmt ListStmt .                         (rule 18)

	'}'            reduce using rule 18


State 116

	Block -> '{' ListStmt '}' .                         (rule 16)

	'!'            reduce using rule 16
	'!='           reduce using rule 16
	'%'            reduce using rule 16
	'&&'           reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'/'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'['            reduce using rule 16
	'[~'           reduce using rule 16
	']~'           reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'function'     reduce using rule 16
	'generator'    reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'tuple'        reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'yield'        reduce using rule 16
	'{'            reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	'~['           reduce using rule 16
	'~]'           reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 117

	Stmt -> Ident '=' . Expr ';'                        (rule 22)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 118
	Expr7          goto state 79

State 118

	Stmt -> Ident '=' Expr . ';'                        (rule 22)

	';'            shift, and enter state 147


State 119

	Stmt -> Type ListItem ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'['            reduce using rule 21
	'boolean'      reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'function'     reduce using rule 21
	'generator'    reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'tuple'        reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'yield'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'~['           reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 120

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_Ident        shift, and enter state 2

	Ident          goto state 112
	Item           goto state 113
	ListItem       goto state 146

State 121

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 145
	Expr7          goto state 79

State 122

	Expr6 -> Expr6 '[~' ListExpr . ']~'                 (rule 52)

	']~'           shift, and enter state 144


State 123

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 59)

	'!'            reduce using rule 59
	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']~'           reduce using rule 59
	'boolean'      reduce using rule 59
	'break'        reduce using rule 59
	'continue'     reduce using rule 59
	'false'        reduce using rule 59
	'for'          reduce using rule 59
	'function'     reduce using rule 59
	'generator'    reduce using rule 59
	'if'           reduce using rule 59
	'int'          reduce using rule 59
	'return'       reduce using rule 59
	'string'       reduce using rule 59
	'true'         reduce using rule 59
	'tuple'        reduce using rule 59
	'void'         reduce using rule 59
	'while'        reduce using rule 59
	'yield'        reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59
	'~['           reduce using rule 59
	'~]'           reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 124

	Expr4 -> Expr4 . MulOp Expr5                        (rule 59)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 61)

	'!'            reduce using rule 61
	'!='           reduce using rule 61
	'%'            shift, and enter state 108
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 109
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 110
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']~'           reduce using rule 61
	'boolean'      reduce using rule 61
	'break'        reduce using rule 61
	'continue'     reduce using rule 61
	'false'        reduce using rule 61
	'for'          reduce using rule 61
	'function'     reduce using rule 61
	'generator'    reduce using rule 61
	'if'           reduce using rule 61
	'int'          reduce using rule 61
	'return'       reduce using rule 61
	'string'       reduce using rule 61
	'true'         reduce using rule 61
	'tuple'        reduce using rule 61
	'void'         reduce using rule 61
	'while'        reduce using rule 61
	'yield'        reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61
	'~['           reduce using rule 61
	'~]'           reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61

	MulOp          goto state 107

State 125

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	';'            reduce using rule 65
	'['            reduce using rule 65
	']~'           reduce using rule 65
	'boolean'      reduce using rule 65
	'break'        reduce using rule 65
	'continue'     reduce using rule 65
	'false'        reduce using rule 65
	'for'          reduce using rule 65
	'function'     reduce using rule 65
	'generator'    reduce using rule 65
	'if'           reduce using rule 65
	'int'          reduce using rule 65
	'return'       reduce using rule 65
	'string'       reduce using rule 65
	'true'         reduce using rule 65
	'tuple'        reduce using rule 65
	'void'         reduce using rule 65
	'while'        reduce using rule 65
	'yield'        reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65
	'~['           reduce using rule 65
	'~]'           reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 126

	Expr3 -> Expr3 . AddOp Expr4                        (rule 61)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 63)

	'!'            reduce using rule 63
	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 105
	','            reduce using rule 63
	'-'            shift, and enter state 106
			(reduce using rule 63)

	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	']~'           reduce using rule 63
	'boolean'      reduce using rule 63
	'break'        reduce using rule 63
	'continue'     reduce using rule 63
	'false'        reduce using rule 63
	'for'          reduce using rule 63
	'function'     reduce using rule 63
	'generator'    reduce using rule 63
	'if'           reduce using rule 63
	'int'          reduce using rule 63
	'return'       reduce using rule 63
	'string'       reduce using rule 63
	'true'         reduce using rule 63
	'tuple'        reduce using rule 63
	'void'         reduce using rule 63
	'while'        reduce using rule 63
	'yield'        reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63
	'~['           reduce using rule 63
	'~]'           reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63

	AddOp          goto state 104

State 127

	Expr -> Expr1 '||' Expr .                           (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	';'            reduce using rule 67
	'['            reduce using rule 67
	']~'           reduce using rule 67
	'boolean'      reduce using rule 67
	'break'        reduce using rule 67
	'continue'     reduce using rule 67
	'false'        reduce using rule 67
	'for'          reduce using rule 67
	'function'     reduce using rule 67
	'generator'    reduce using rule 67
	'if'           reduce using rule 67
	'int'          reduce using rule 67
	'return'       reduce using rule 67
	'string'       reduce using rule 67
	'true'         reduce using rule 67
	'tuple'        reduce using rule 67
	'void'         reduce using rule 67
	'while'        reduce using rule 67
	'yield'        reduce using rule 67
	'{'            reduce using rule 67
	'~['           reduce using rule 67
	'~]'           reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 128

	Stmt -> Expr7 ':=' Expr . ';'                       (rule 23)

	';'            shift, and enter state 143


State 129

	Expr7 -> '(' Expr ')' .                             (rule 70)

	'!'            reduce using rule 70
	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	':='           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'['            reduce using rule 70
	'[~'           reduce using rule 70
	']~'           reduce using rule 70
	'boolean'      reduce using rule 70
	'break'        reduce using rule 70
	'continue'     reduce using rule 70
	'false'        reduce using rule 70
	'for'          reduce using rule 70
	'function'     reduce using rule 70
	'generator'    reduce using rule 70
	'if'           reduce using rule 70
	'int'          reduce using rule 70
	'return'       reduce using rule 70
	'string'       reduce using rule 70
	'true'         reduce using rule 70
	'tuple'        reduce using rule 70
	'void'         reduce using rule 70
	'while'        reduce using rule 70
	'yield'        reduce using rule 70
	'{'            reduce using rule 70
	'||'           reduce using rule 70
	'~['           reduce using rule 70
	'~]'           reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 130

	Expr6 -> '[' ListArg ']' . ':' Type '~>' Block      (rule 54)

	':'            shift, and enter state 142


State 131

	Stmt -> 'for' Ident 'in' . Expr Stmt                (rule 33)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 141
	Expr7          goto state 79

State 132

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 27)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 28)

	')'            shift, and enter state 140


State 133

	Stmt -> 'return' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'['            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'function'     reduce using rule 24
	'generator'    reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'tuple'        reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'yield'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~['           reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 134

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 32)

	')'            shift, and enter state 139


State 135

	Stmt -> 'yield' Expr ';' .                          (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'['            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'function'     reduce using rule 26
	'generator'    reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'tuple'        reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'yield'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'~['           reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 136

	Expr7 -> '~[' ListExpr '~]' .                       (rule 69)

	'!'            reduce using rule 69
	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	':='           reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'['            reduce using rule 69
	'[~'           reduce using rule 69
	']~'           reduce using rule 69
	'boolean'      reduce using rule 69
	'break'        reduce using rule 69
	'continue'     reduce using rule 69
	'false'        reduce using rule 69
	'for'          reduce using rule 69
	'function'     reduce using rule 69
	'generator'    reduce using rule 69
	'if'           reduce using rule 69
	'int'          reduce using rule 69
	'return'       reduce using rule 69
	'string'       reduce using rule 69
	'true'         reduce using rule 69
	'tuple'        reduce using rule 69
	'void'         reduce using rule 69
	'while'        reduce using rule 69
	'yield'        reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69
	'~['           reduce using rule 69
	'~]'           reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 137

	ListExpr -> Expr ',' . ListExpr                     (rule 73)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'['            shift, and enter state 64
	']~'           reduce using rule 71
	'false'        shift, and enter state 67
	'true'         shift, and enter state 71
	'~['           shift, and enter state 74
	'~]'           reduce using rule 71
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 77
	Integer        goto state 46
	String         goto state 47
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 78
	Expr7          goto state 79
	ListExpr       goto state 138

State 138

	ListExpr -> Expr ',' ListExpr .                     (rule 73)

	']~'           reduce using rule 73
	'~]'           reduce using rule 73


State 139

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'['            shift, and enter state 64
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 65
	'continue'     shift, and enter state 66
	'false'        shift, and enter state 67
	'for'          shift, and enter state 68
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'if'           shift, and enter state 69
	'int'          shift, and enter state 10
	'return'       shift, and enter state 70
	'string'       shift, and enter state 11
	'true'         shift, and enter state 71
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	'while'        shift, and enter state 72
	'yield'        shift, and enter state 73
	'{'            shift, and enter state 42
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 151
	Type           goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr7          goto state 59

State 140

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 27)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 28)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'['            shift, and enter state 64
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 65
	'continue'     shift, and enter state 66
	'false'        shift, and enter state 67
	'for'          shift, and enter state 68
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'if'           shift, and enter state 69
	'int'          shift, and enter state 10
	'return'       shift, and enter state 70
	'string'       shift, and enter state 11
	'true'         shift, and enter state 71
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	'while'        shift, and enter state 72
	'yield'        shift, and enter state 73
	'{'            shift, and enter state 42
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 150
	Type           goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr7          goto state 59

State 141

	Stmt -> 'for' Ident 'in' Expr . Stmt                (rule 33)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'['            shift, and enter state 64
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 65
	'continue'     shift, and enter state 66
	'false'        shift, and enter state 67
	'for'          shift, and enter state 68
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'if'           shift, and enter state 69
	'int'          shift, and enter state 10
	'return'       shift, and enter state 70
	'string'       shift, and enter state 11
	'true'         shift, and enter state 71
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	'while'        shift, and enter state 72
	'yield'        shift, and enter state 73
	'{'            shift, and enter state 42
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 149
	Type           goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr7          goto state 59

State 142

	Expr6 -> '[' ListArg ']' ':' . Type '~>' Block      (rule 54)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 148

State 143

	Stmt -> Expr7 ':=' Expr ';' .                       (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'['            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'function'     reduce using rule 23
	'generator'    reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'tuple'        reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'yield'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~['           reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 144

	Expr6 -> Expr6 '[~' ListExpr ']~' .                 (rule 52)

	'!'            reduce using rule 52
	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	'[~'           reduce using rule 52
	']~'           reduce using rule 52
	'boolean'      reduce using rule 52
	'break'        reduce using rule 52
	'continue'     reduce using rule 52
	'false'        reduce using rule 52
	'for'          reduce using rule 52
	'function'     reduce using rule 52
	'generator'    reduce using rule 52
	'if'           reduce using rule 52
	'int'          reduce using rule 52
	'return'       reduce using rule 52
	'string'       reduce using rule 52
	'true'         reduce using rule 52
	'tuple'        reduce using rule 52
	'void'         reduce using rule 52
	'while'        reduce using rule 52
	'yield'        reduce using rule 52
	'{'            reduce using rule 52
	'||'           reduce using rule 52
	'~['           reduce using rule 52
	'~]'           reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 145

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 146

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 147

	Stmt -> Ident '=' Expr ';' .                        (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'['            reduce using rule 22
	'boolean'      reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'function'     reduce using rule 22
	'generator'    reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'tuple'        reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'yield'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~['           reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 148

	Expr6 -> '[' ListArg ']' ':' Type . '~>' Block      (rule 54)

	'~>'           shift, and enter state 153


State 149

	Stmt -> 'for' Ident 'in' Expr Stmt .                (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'['            reduce using rule 33
	'boolean'      reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'function'     reduce using rule 33
	'generator'    reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'tuple'        reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'yield'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'~['           reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 150

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 27)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 28)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'['            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'else'         shift, and enter state 152
			(reduce using rule 27)

	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'function'     reduce using rule 27
	'generator'    reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'tuple'        reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'yield'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'~['           reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 151

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'['            reduce using rule 32
	'boolean'      reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'function'     reduce using rule 32
	'generator'    reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'tuple'        reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'yield'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'~['           reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 152

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 28)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'['            shift, and enter state 64
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 65
	'continue'     shift, and enter state 66
	'false'        shift, and enter state 67
	'for'          shift, and enter state 68
	'function'     shift, and enter state 8
	'generator'    shift, and enter state 9
	'if'           shift, and enter state 69
	'int'          shift, and enter state 10
	'return'       shift, and enter state 70
	'string'       shift, and enter state 11
	'true'         shift, and enter state 71
	'tuple'        shift, and enter state 12
	'void'         shift, and enter state 13
	'while'        shift, and enter state 72
	'yield'        shift, and enter state 73
	'{'            shift, and enter state 42
	'~['           shift, and enter state 74
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 75
	L_quoted       shift, and enter state 76

	Ident          goto state 45
	Integer        goto state 46
	String         goto state 47
	Block          goto state 48
	Stmt           goto state 155
	Type           goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58
	Expr7          goto state 59

State 153

	Expr6 -> '[' ListArg ']' ':' Type '~>' . Block      (rule 54)

	'{'            shift, and enter state 42

	Block          goto state 154

State 154

	Expr6 -> '[' ListArg ']' ':' Type '~>' Block .      (rule 54)

	'!'            reduce using rule 54
	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	'[~'           reduce using rule 54
	']~'           reduce using rule 54
	'boolean'      reduce using rule 54
	'break'        reduce using rule 54
	'continue'     reduce using rule 54
	'false'        reduce using rule 54
	'for'          reduce using rule 54
	'function'     reduce using rule 54
	'generator'    reduce using rule 54
	'if'           reduce using rule 54
	'int'          reduce using rule 54
	'return'       reduce using rule 54
	'string'       reduce using rule 54
	'true'         reduce using rule 54
	'tuple'        reduce using rule 54
	'void'         reduce using rule 54
	'while'        reduce using rule 54
	'yield'        reduce using rule 54
	'{'            reduce using rule 54
	'||'           reduce using rule 54
	'~['           reduce using rule 54
	'~]'           reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 155

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'['            reduce using rule 28
	'boolean'      reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'function'     reduce using rule 28
	'generator'    reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'tuple'        reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'yield'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'~['           reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 52
Number of non-terminals: 30
Number of states: 156
